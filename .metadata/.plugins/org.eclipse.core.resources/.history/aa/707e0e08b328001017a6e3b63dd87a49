package com.yamyam.controller;


import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.yamyam.dto.request.LoginRequest;
import com.yamyam.dto.response.LoginResponse;
import com.yamyam.service.AuthService;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;

@RestController
@RequestMapping("/api/auth")
public class AuthController {

	// 생성자 주입
	private final AuthService authService;
	public AuthController(AuthService authService) {
		this.authService = authService;
	}

	@PostMapping("/login")
	public ResponseEntity<?> login(@RequestBody LoginRequest loginDto, HttpServletRequest request) {
		System.out.println(loginDto);
		try {
           LoginResponse loginResponse = authService.login(loginDto,request);
           System.out.println(loginResponse);
           return ResponseEntity.ok(loginResponse);
        } catch (AuthenticationException e) {
           System.out.println("인증 실패: " + e.getMessage());
           return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("이메일 또는 비밀번호가 일치하지 않습니다.");
        }

	}
	
	@PostMapping("/logout")
	public ResponseEntity<String> logout(HttpServletRequest request) {
		System.out.println("hello");
		try {
			request.logout();
			return ResponseEntity.ok("logout");
		} catch (ServletException e) {
			e.printStackTrace();
		}
		
		return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("logout false");
	}
}
