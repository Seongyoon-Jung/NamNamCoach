package com.yamyam.service;

import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.yamyam.dto.request.LoginRequest;
import com.yamyam.entity.UserEntity;
import com.yamyam.repository.UserRepository;

@Service
public class AuthServiceImpl implements AuthService{

	//생성자 주입 우리는 시큐리티 기본 formlogin을 비활성화 했기 때문에 여기서 커스텀으로 인가를 해야한다.
	private final UserRepository userRepository;
	private final BCryptPasswordEncoder bCryptPasswordEncoder;
	public AuthServiceImpl(UserRepository userRepository, BCryptPasswordEncoder bCryptPasswordEncoder) {
		this.userRepository = userRepository;
		this.bCryptPasswordEncoder = bCryptPasswordEncoder;
	}

	@Override
	public void login(LoginRequest loginRequestDto) {
		UserEntity user = userRepository.findByEmail(loginRequestDto.getEmail());
		 if (user == null) {
			 // 스프링 시큐리티에서 제공하는 예외처리
            throw new UsernameNotFoundException("존재하지 않는 사용자입니다.");
	     }
		 
		 // 2. 비밀번호 일치 확인
        boolean match = bCryptPasswordEncoder.matches(loginRequestDto.getPassword(), user.getPassword());
        if (!match) {
            throw new IllegalArgumentException("비밀번호가 일치하지 않습니다.");
        }

        System.out.println("로그인 성공: " + user.getUsername());
}

	@Override
	public void logout(String id) {
		
	}

}
