package com.yamyam.service;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.yamyam.dto.request.LoginRequest;
import com.yamyam.dto.response.LoginResponse;
import com.yamyam.entity.UserEntity;
import com.yamyam.repository.UserRepository;

@Service
public class AuthServiceImpl implements AuthService{

	//생성자 주입 우리는 시큐리티 기본 formlogin을 비활성화 했기 때문에 여기서 커스텀으로 인가를 해야한다.
	private final AuthenticationManager authenticationManager;
	private final UserRepository userRepository;
	public AuthServiceImpl(AuthenticationManager authenticationManager, UserRepository userRepository) {
		this.authenticationManager = authenticationManager;
		this.userRepository = userRepository;
	}

	@Override
	public LoginResponse login(LoginRequest loginRequestDto) {
		UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(loginRequestDto.getEmail(), loginRequestDto.getPassword());

        // 스프링 시큐리티에 위임 → 내부적으로 UserDetailsService + PasswordEncoder 실행됨
        System.out.println(authenticationManager.authenticate(token));
        LoginResponse loginResponse = new LoginResponse(userRepository.findByEmail(loginRequestDto.getEmail()).get);
        return loginResponse;
	}
	
	@Override
	public void logout(String id) {
		
	}

}
