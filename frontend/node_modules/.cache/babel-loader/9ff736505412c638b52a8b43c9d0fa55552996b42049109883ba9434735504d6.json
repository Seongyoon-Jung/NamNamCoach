{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '@/store';\nconst routes = [{\n  path: '/',\n  name: 'HomeView',\n  component: () => import('../views/HomeView.vue'),\n  meta: {\n    title: '홈 | 냠냠코치',\n    requiresSurvey: false\n  }\n}, {\n  path: '/',\n  name: 'HomeLoginView',\n  component: () => import('../views/HomeLoginView.vue'),\n  meta: {\n    title: '홈 | 냠냠코치',\n    requiresSurvey: true\n  }\n}, {\n  path: '/survey',\n  name: 'SurveyView',\n  component: () => import(/* webpackChunkName: \"login\" */'../views/SurveyView.vue'),\n  meta: {\n    title: '설문조사 | 냠냠코치'\n  }\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: () => import(/* webpackChunkName: \"login\" */'../views/LoginView.vue'),\n  meta: {\n    title: '로그인 | 냠냠코치'\n  }\n}, {\n  path: '/signup',\n  name: 'SignupView',\n  component: () => import(/* webpackChunkName: \"login\" */'../views/SignupView.vue'),\n  meta: {\n    title: '회원가입 | 냠냠코치'\n  }\n}, {\n  path: '/features',\n  name: 'FeaturesView',\n  component: () => import('../views/FeaturesView.vue'),\n  meta: {\n    title: '기능소개 | 냠냠코치'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\naxios.get('/api/users/me').then(res => {\n  if (res.data == 'anonymousUser') {\n    store.commit('setAccount', {\n      userId: null,\n      username: '',\n      isSurveyed: false\n    });\n  } else {\n    store.commit('setAccount', {\n      userId: res.data.userId,\n      username: res.data.username,\n      isSurveyed: res.data.surveyed\n    });\n  }\n});\nrouter.beforeEach((to, from, next) => {\n  // 설문 완료가 필요한 홈(홈로그인뷰)로 진입 시\n  if (to.meta.requiresSurvey) {\n    if (store.state.account.username && store.state.account.isSurveyed) {\n      console.log('여기는 설문조사 미완료 유저입니다');\n      return next();\n    } else {\n      return next({\n        name: 'SurveyView'\n      });\n    }\n  }\n\n  // 루트(‘/’) 접근인데 이미 설문 완료 상태면 HomeLoginView로\n  console.log(store.state.account, to.name, store.state.account.username, store.state.account.isSurveyed);\n  if (to.name === 'HomeView' && store.state.account.username && store.state.account.isSurveyed) {\n    console.log('여기는 설문조사 완료 유저입니다');\n    return next({\n      name: 'HomeLoginView'\n    });\n  }\n  next();\n});\nrouter.afterEach(to => {\n  document.title = to.meta.title || '냠냠코치';\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","routes","path","name","component","meta","title","requiresSurvey","router","history","process","env","BASE_URL","axios","get","then","res","data","commit","userId","username","isSurveyed","surveyed","beforeEach","to","from","next","state","account","console","log","afterEach","document"],"sources":["C:/Users/SSAFY/Desktop/YamYamCoach/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport store from '@/store';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'HomeView',\r\n    component: () => import('../views/HomeView.vue'),\r\n    meta: { title: '홈 | 냠냠코치', requiresSurvey: false },\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'HomeLoginView',\r\n    component: () => import('../views/HomeLoginView.vue'),\r\n    meta: { title: '홈 | 냠냠코치', requiresSurvey: true },\r\n  },\r\n  {\r\n    path: '/survey',\r\n    name: 'SurveyView',\r\n    component: () =>\r\n      import(/* webpackChunkName: \"login\" */ '../views/SurveyView.vue'),\r\n    meta: { title: '설문조사 | 냠냠코치' },\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'LoginView',\r\n    component: () =>\r\n      import(/* webpackChunkName: \"login\" */ '../views/LoginView.vue'),\r\n    meta: { title: '로그인 | 냠냠코치' },\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'SignupView',\r\n\r\n    component: () =>\r\n      import(/* webpackChunkName: \"login\" */ '../views/SignupView.vue'),\r\n    meta: { title: '회원가입 | 냠냠코치' },\r\n  },\r\n  {\r\n    path: '/features',\r\n    name: 'FeaturesView',\r\n    component: () => import('../views/FeaturesView.vue'),\r\n    meta: { title: '기능소개 | 냠냠코치' },\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n\r\naxios.get('/api/users/me').then((res) => {\r\n  if (res.data == 'anonymousUser') {\r\n    store.commit('setAccount', {\r\n      userId: null,\r\n      username: '',\r\n      isSurveyed: false,\r\n    });\r\n  } else {\r\n    store.commit('setAccount', {\r\n      userId: res.data.userId,\r\n      username: res.data.username,\r\n      isSurveyed: res.data.surveyed,\r\n    });\r\n  }\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // 설문 완료가 필요한 홈(홈로그인뷰)로 진입 시\r\n  if (to.meta.requiresSurvey) {\r\n    if (store.state.account.username && store.state.account.isSurveyed) {\r\n      console.log('여기는 설문조사 미완료 유저입니다');\r\n      return next();\r\n    } else {\r\n      return next({ name: 'SurveyView' });\r\n    }\r\n  }\r\n\r\n  // 루트(‘/’) 접근인데 이미 설문 완료 상태면 HomeLoginView로\r\n  console.log(\r\n    store.state.account,\r\n    to.name,\r\n    store.state.account.username,\r\n    store.state.account.isSurveyed\r\n  );\r\n  if (\r\n    to.name === 'HomeView' &&\r\n    store.state.account.username &&\r\n    store.state.account.isSurveyed\r\n  ) {\r\n    console.log('여기는 설문조사 완료 유저입니다');\r\n    return next({ name: 'HomeLoginView' });\r\n  }\r\n\r\n  next();\r\n});\r\n\r\nrouter.afterEach((to) => {\r\n  document.title = to.meta.title || '냠냠코치';\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}