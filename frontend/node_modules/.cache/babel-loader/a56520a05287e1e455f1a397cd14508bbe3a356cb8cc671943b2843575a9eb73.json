{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/plugins/axios';\nexport default {\n  name: 'SurveyView',\n  data() {\n    return {\n      showIntro: true,\n      showBasic: false,\n      currentStep: 0,\n      finished: false,\n      basic: {\n        height: null,\n        weight: null,\n        targetWeight: null\n      },\n      questions: [\n        //   { text: '나는 하루 세 끼를 규칙적으로 먹는다.' },\n        //   { text: '나는 자주 야식을 먹는 편이다.' },\n        //   { text: '나의 식사 시간은 거의 매일 비슷한 편이다.' },\n        //   { text: '한 끼에 내가 먹는 양이 적절하다고 느낀다.' },\n        //   { text: '나는 주로 채소와 단백질을 골고루 섭취하려고 노력한다.' },\n        //   { text: '나는 단 음식을 자주 즐겨 먹는다.' },\n        //   { text: '나는 일주일에 최소 3회 이상 규칙적으로 운동을 한다.' },\n        //   { text: '나는 하루에 2L 이상의 물을 충분히 마신다.' },\n        //   { text: '나는 스트레스를 받을 때 평소보다 더 많이 먹는 편이다.' },\n        //   { text: '나는 식사할 때 TV·휴대폰·일 등 딴짓 없이 음식에만 집중해서 먹는다.' }\n      ],\n      answers: Array(10).fill(null),\n      options: ['전혀 그렇지 않다', '그렇지 않다', '보통이다', '그렇다', '매우 그렇다']\n    };\n  },\n  //설문조사 목록을 가져오기 위해서 페이지가 만들어 졌을때 질문목록 백에서 가져오기\n  created() {\n    axios.get('/api/survey/questions', {\n      params: {\n        stepLevel: 1\n      }\n    }).then(res => {\n      console.log(res.data);\n    }).catch(err => {});\n  },\n  computed: {\n    isFirst() {\n      return this.currentStep === 0;\n    },\n    isLast() {\n      return this.currentStep === this.questions.length - 1;\n    }\n  },\n  methods: {\n    backToIntro() {\n      this.showIntro = true;\n      this.showBasic = false;\n    },\n    startBasic() {\n      this.showIntro = false;\n      this.showBasic = true;\n    },\n    startSurvey() {\n      // 기본정보 유효성 검사\n      if (!this.basic.height || !this.basic.weight || !this.basic.targetWeight) {\n        alert('모든 기본정보를 입력해주세요.');\n        return;\n      }\n      this.showBasic = false;\n    },\n    skipSurvey() {\n      this.$router.push({\n        name: 'HomeLoginView'\n      });\n    },\n    nextStep() {\n      if (!this.validate()) return;\n      this.currentStep++;\n    },\n    prevStep() {\n      if (this.currentStep > 0) this.currentStep--;\n    },\n    validate() {\n      if (this.answers[this.currentStep] === null) {\n        alert('답변을 선택해주세요.');\n        return false;\n      }\n      return true;\n    },\n    async submitSurvey() {\n      console.log(this.basic, this.answers);\n      // if (!this.validate()) return;\n      // try {\n      //   await axios.post('/api/survey', {\n      //     basic: this.basic,\n      //     answers: this.answers\n      //   });\n      //   this.finished = true;\n      // } catch (err) {\n      //   console.error(err);\n      //   alert('제출 중 오류가 발생했습니다.');\n      // }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","showIntro","showBasic","currentStep","finished","basic","height","weight","targetWeight","questions","answers","Array","fill","options","created","get","params","stepLevel","then","res","console","log","catch","err","computed","isFirst","isLast","length","methods","backToIntro","startBasic","startSurvey","alert","skipSurvey","$router","push","nextStep","validate","prevStep","submitSurvey"],"sources":["C:\\Users\\taewo\\Desktop\\yamyam\\vue-app\\src\\views\\SurveyView.vue"],"sourcesContent":["<template>\r\n    <main class=\"survey-page\">\r\n      <div class=\"container mt-5\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n  \r\n            <!-- 1) 인트로 화면 -->\r\n            <div v-if=\"showIntro\" class=\"card p-4 shadow-sm text-center\">\r\n              <h3 class=\"text-primary mb-3\">🍽️ 냠냠코치 식습관 설문조사 🍽️</h3>\r\n              <p>\r\n                당신의 식습관을 흥미진진하게 파헤쳐 줄<br/>\r\n                <strong>‘냠냠코치 식습관 분석’</strong>에 초대합니다!<br/>\r\n                질문에 솔직하게 답하면 나만의 맞춤 리포트를 드려요.<br/><br>\r\n                ※주의 ) <u>건너뛰기</u> 시엔 나이·성별 평균값 기반 분석이 제공되어<br/>\r\n                정확도가 떨어질 수 있으니 주의하세요!<br/><br/>\r\n                🎉 특별 이벤트: 참여만 해도 <strong>냠냠코인 10,000개</strong>를 드립니다!\r\n              </p>\r\n              <div class=\"mt-4\">\r\n                <button class=\"btn btn-success me-2\" @click=\"startBasic\">\r\n                  설문 시작하기\r\n                </button>\r\n                <router-link to=\"/\" class=\"btn btn-outline-secondary\">\r\n                  건너뛰기\r\n                </router-link>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- 2) 기본정보 입력 화면 -->\r\n            <div v-else-if=\"showBasic\" class=\"card p-4 shadow-sm\">\r\n              <h4 class=\"text-center text-primary mb-4\">기본 정보 입력</h4>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">키 (cm)</label>\r\n                <input type=\"number\" class=\"form-control\" v-model.number=\"basic.height\" />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">체중 (kg)</label>\r\n                <input type=\"number\" class=\"form-control\" v-model.number=\"basic.weight\" />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">목표 체중 (kg)</label>\r\n                <input type=\"number\" class=\"form-control\" v-model.number=\"basic.targetWeight\" />\r\n              </div>\r\n              <div class=\"d-flex justify-content-between\">\r\n                <button class=\"btn btn-secondary\" @click=\"backToIntro\">\r\n                  이전\r\n                </button>\r\n                <button class=\"btn btn-primary\" @click=\"startSurvey\">\r\n                  다음\r\n                </button>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- 3) 실제 설문 화면 -->\r\n            <div v-else class=\"card p-4 shadow-sm\">\r\n              <h3 class=\"text-center text-primary mb-4\">식습관 분석</h3>\r\n  \r\n              <!-- 스텝 인디케이터 -->\r\n              <div class=\"d-flex justify-content-center mb-4\">\r\n                <span\r\n                  v-for=\"(q,i) in questions\"\r\n                  :key=\"i\"\r\n                  class=\"step mx-1\"\r\n                  :class=\"{ active: currentStep===i, finish: i<currentStep }\"\r\n                >{{ i+1 }}</span>\r\n              </div>\r\n  \r\n              <!-- 질문 탭 -->\r\n              <div v-for=\"(q,i) in questions\" :key=\"i\" v-show=\"currentStep===i\" class=\"tab\">\r\n                <h5>{{ q.text }}</h5>\r\n                <div class=\"mt-3 d-flex justify-content-between\">\r\n                    <div class=\"form-check form-check-inline\" v-for=\"(opt,idx) in options\" :key=\"idx\">\r\n                    <input\r\n                        class=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        :name=\"'q'+i\"\r\n                        :id=\"'q'+i+'-opt'+idx\"\r\n                        :value=\"idx\"\r\n                        v-model=\"answers[i]\"\r\n                    />\r\n                    <label\r\n                        class=\"form-check-label\"\r\n                        :for=\"'q'+i+'-opt'+idx\"\r\n                    >{{ opt }}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n              <!-- 네비게이션 버튼 -->\r\n              <div class=\"d-flex justify-content-between mt-4\">\r\n                <button class=\"btn btn-secondary\" @click=\"prevStep\" :disabled=\"isFirst\">\r\n                  이전\r\n                </button>\r\n                <button class=\"btn btn-primary\" @click=\"isLast ? submitSurvey() : nextStep()\">\r\n                  {{ isLast ? '제출' : '다음' }}\r\n                </button>\r\n              </div>\r\n  \r\n              <!-- 완료 메시지 -->\r\n              <div v-if=\"finished\" class=\"text-center mt-4\">\r\n                <h4 class=\"text-success\">설문이 완료되었습니다!</h4>\r\n                <p>소중한 응답 감사합니다.</p>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from '@/plugins/axios';\r\n  \r\n  export default {\r\n    name: 'SurveyView',\r\n    data() {\r\n      return {\r\n        showIntro: true,\r\n        showBasic: false,\r\n        currentStep: 0,\r\n        finished: false,\r\n        basic: {\r\n          height: null,\r\n          weight: null,\r\n          targetWeight: null\r\n        },\r\n        questions: [\r\n        //   { text: '나는 하루 세 끼를 규칙적으로 먹는다.' },\r\n        //   { text: '나는 자주 야식을 먹는 편이다.' },\r\n        //   { text: '나의 식사 시간은 거의 매일 비슷한 편이다.' },\r\n        //   { text: '한 끼에 내가 먹는 양이 적절하다고 느낀다.' },\r\n        //   { text: '나는 주로 채소와 단백질을 골고루 섭취하려고 노력한다.' },\r\n        //   { text: '나는 단 음식을 자주 즐겨 먹는다.' },\r\n        //   { text: '나는 일주일에 최소 3회 이상 규칙적으로 운동을 한다.' },\r\n        //   { text: '나는 하루에 2L 이상의 물을 충분히 마신다.' },\r\n        //   { text: '나는 스트레스를 받을 때 평소보다 더 많이 먹는 편이다.' },\r\n        //   { text: '나는 식사할 때 TV·휴대폰·일 등 딴짓 없이 음식에만 집중해서 먹는다.' }\r\n        ],\r\n        answers: Array(10).fill(null),\r\n        options: [\r\n          '전혀 그렇지 않다',\r\n          '그렇지 않다',\r\n          '보통이다',\r\n          '그렇다',\r\n          '매우 그렇다'\r\n        ]\r\n      };\r\n    },\r\n    //설문조사 목록을 가져오기 위해서 페이지가 만들어 졌을때 질문목록 백에서 가져오기\r\n    created(){\r\n        axios\r\n        .get('/api/survey/questions',{params:{stepLevel:1}})\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        })\r\n        .catch((err) => {\r\n        });\r\n    },\r\n    computed: {\r\n      isFirst() {\r\n        return this.currentStep === 0;\r\n      },\r\n      isLast() {\r\n        return this.currentStep === this.questions.length - 1;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      backToIntro() {\r\n        this.showIntro = true;\r\n        this.showBasic = false;\r\n      },\r\n      startBasic() {\r\n        this.showIntro = false;\r\n        this.showBasic = true;\r\n      },\r\n      startSurvey() {\r\n        // 기본정보 유효성 검사\r\n        if (!this.basic.height || !this.basic.weight || !this.basic.targetWeight) {\r\n          alert('모든 기본정보를 입력해주세요.');\r\n          return;\r\n        }\r\n        this.showBasic = false;\r\n      },\r\n      skipSurvey() {\r\n        this.$router.push({ name: 'HomeLoginView' });\r\n      },\r\n      nextStep() {\r\n        if (!this.validate()) return;\r\n        this.currentStep++;\r\n      },\r\n      prevStep() {\r\n        if (this.currentStep > 0) this.currentStep--;\r\n      },\r\n      validate() {\r\n        if (this.answers[this.currentStep] === null) {\r\n          alert('답변을 선택해주세요.');\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n      async submitSurvey() {\r\n        console.log(this.basic, this.answers)\r\n        // if (!this.validate()) return;\r\n        // try {\r\n        //   await axios.post('/api/survey', {\r\n        //     basic: this.basic,\r\n        //     answers: this.answers\r\n        //   });\r\n        //   this.finished = true;\r\n        // } catch (err) {\r\n        //   console.error(err);\r\n        //   alert('제출 중 오류가 발생했습니다.');\r\n        // }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .survey-page {\r\n    background: #f8f9fa;\r\n    min-height: 100vh;\r\n    padding-bottom: 2rem;\r\n  }\r\n  .step {\r\n    display: inline-block;\r\n    width: 2rem; height: 2rem;\r\n    background: #ddd; border-radius: 50%;\r\n    line-height: 2rem; text-align: center;\r\n    color: #6c757d; opacity: 0.5;\r\n    transition: all 0.3s;\r\n  }\r\n  .step.active { opacity:1; background:#6f42c1; color:#fff }\r\n  .step.finish { background:#6f42c1; color:#fff; opacity:1 }\r\n  /* 인트로/기본정보 카드 */\r\n  .card.text-center p, .card h4 { line-height:1.6; }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}