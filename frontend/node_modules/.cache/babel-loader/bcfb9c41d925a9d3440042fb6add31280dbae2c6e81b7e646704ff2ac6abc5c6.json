{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/plugins/axios';\nexport default {\n  name: 'SignupView',\n  // name은 index.js에 선언해놓은 이름과 똑같아야함\n  data() {\n    return {\n      result: {\n        email: '',\n        password: '',\n        username: '',\n        gender: null,\n        birthDate: '',\n        checkedEmail: false,\n        checkedUsername: false\n      }\n    };\n  },\n  created() {},\n  methods: {\n    save() {\n      if (!this.result.checkedEmail) {\n        alert('이메일 중복 검사 필요');\n        return;\n      }\n      if (!this.result.checkedUsername) {\n        alert('닉네임 중복 검사 필요');\n        return;\n      }\n      if (this.result.email == '') {\n        alert('이메일 입력필요');\n        return;\n      }\n      if (this.result.password == '') {\n        alert('비밀번호 입력필요');\n        return;\n      }\n      if (this.result.username == '') {\n        alert('닉네임 입력필요');\n        return;\n      }\n      if (this.result.gender == null) {\n        alert('성별 입력필요');\n        return;\n      }\n\n      //사용자 편의를 위해서 날짜입력을 텍스트 값으로 했기 때문에 맞는 생년월일이 들어와야하는 지 함수로 판단\n      if (this.isValidCompactDate(this.result.birthDate)) {\n        var str = this.result.birthDate;\n        str = str.substring(0, 4) + \"-\" + str.substring(4, 6) + \"-\" + str.substring(6, 8);\n        this.result.birthDate = str;\n      }\n      //아무것도 입력하지 않았을 경우\n      else if (this.result.birthDate == '') {\n        alert('생년월일을 입력필요.');\n        return;\n      } else {\n        console.log(this.result.birthDate);\n        alert('생년월일을 제대로 입력해주세요.');\n        return;\n      }\n      console.log(this.result);\n      axios.post('/api/users', this.result).then(res => {\n        console.log(res);\n        alert(\"회원가입이 완료되었습니다.\");\n        this.$router.push({\n          name: 'LoginView'\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    isValidCompactDate(str) {\n      // 2. 연월일 추출\n      const year = parseInt(str.substring(0, 4), 10);\n      const month = parseInt(str.substring(4, 6), 10);\n      const day = parseInt(str.substring(6, 8), 10);\n\n      // 3. Date 객체로 변환\n      const date = new Date(year, month - 1, day);\n\n      // 4. 날짜 유효성 검사\n      return date.getFullYear() === year && date.getMonth() + 1 === month && date.getDate() === day;\n    },\n    checkEmail() {\n      if (this.result.email == '') {\n        alert('이메일 입력필요');\n        return;\n      }\n      axios.get('/api/users/check-email', {\n        params: {\n          email: this.result.email\n        }\n      }).then(res => {\n        console.log(res);\n        alert(\"사용 가능한 이메일 입니다\");\n        this.result.checkedEmail = true;\n      }).catch(err => {\n        alert(\"사용 불가능한 이메일 입니다\");\n        console.log(err);\n        this.result.email = '';\n        this.result.checkedEmail = false;\n      });\n    },\n    checkUsername() {\n      if (this.result.username == '') {\n        alert('닉네임 입력필요');\n        return;\n      }\n      axios.get('/api/users/check-username', {\n        params: {\n          username: this.result.username\n        }\n      }).then(res => {\n        console.log(res);\n        alert(\"사용 가능한 닉네임 입니다\");\n        this.result.checkedUsername = true;\n      }).catch(err => {\n        alert(\"사용 불가능한 닉네임 입니다\");\n        console.log(err);\n        this.result.username = '';\n        this.result.checkedUsername = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","result","email","password","username","gender","birthDate","checkedEmail","checkedUsername","created","methods","save","alert","isValidCompactDate","str","substring","console","log","post","then","res","$router","push","catch","err","year","parseInt","month","day","date","Date","getFullYear","getMonth","getDate","checkEmail","get","params","checkUsername"],"sources":["C:\\Users\\taewo\\Desktop\\yamyam\\vue-app\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex align-items-center justify-content-center min-vh-100\">\r\n    <div\r\n      class=\"card p-5 shadow-lg\"\r\n      style=\"max-width: 700px; width: 100%; border-radius: 1rem\"\r\n    >\r\n      <h3 class=\"text-center fw-bold mb-4 text-dark\">회원 정보 입력 (필수)</h3>\r\n      <hr />\r\n\r\n      <form>\r\n        <div class=\"row g-3\">\r\n          <!-- 이메일 -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row align-items-center\">\r\n              <label for=\"email\" class=\"col-md-2 col-form-label fw-bold\"\r\n                >이메일</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"example@domain.com\"\r\n                    required\r\n                    name=\"email\"\r\n                    v-model=\"result.email\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-secondary\"\r\n                    @click=\"checkEmail\"\r\n                  >\r\n                    중복 확인\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 비밀번호 -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row align-items-center\">\r\n              <label for=\"password\" class=\"col-md-2 col-form-label fw-bold\"\r\n                >비밀번호</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"비밀번호를 입력하세요\"\r\n                  required\r\n                  name=\"password\"\r\n                  v-model=\"result.password\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 닉네임 -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row align-items-center\">\r\n              <label for=\"username\" class=\"col-md-2 col-form-label fw-bold\"\r\n                >닉네임</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"사용할 닉네임\"\r\n                    required\r\n                    name=\"username\"\r\n                    v-model=\"result.username\"\r\n                  />\r\n                  <button type=\"button\" class=\"btn btn-outline-secondary\"  @click=\"checkUsername\">\r\n                    중복 확인\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 성별 -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row align-items-center\">\r\n              <label class=\"col-md-2 col-form-label fw-bold\">성별</label>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"d-flex align-items-center gap-3 border rounded px-3 py-2\"\r\n                  style=\"height: 38px\"\r\n                >\r\n                  <div class=\"form-check form-check-inline m-0\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      id=\"male\"\r\n                      v-bind:value=\"false\"\r\n                      v-model=\"result.gender\"\r\n                    />\r\n                    <label class=\"form-check-label mb-0\" for=\"male\">남성</label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-inline m-0\">\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      id=\"female\"\r\n                      v-bind:value=\"true\"\r\n                      v-model=\"result.gender\"\r\n                    />\r\n                    <label class=\"form-check-label mb-0\" for=\"female\"\r\n                      >여성</label\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 생년월일 -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row align-items-center\">\r\n              <label for=\"birthdate\" class=\"col-md-2 col-form-label fw-bold\"\r\n                >생년월일</label\r\n              >\r\n              <div class=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"birthdate\"\r\n                  class=\"form-control\"\r\n                  required\r\n                  name=\"birthDate\"\r\n                  placeholder=\"예) 20000101 (8자리)\"\r\n                  v-model=\"result.birthDate\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 가입 버튼 -->\r\n          <div class=\"col-12 text-center mt-4\">\r\n            <!-- 일단 submit하지말고 console 출력확인을 위해 버튼으로 임시설정 -->\r\n            <button type=\"button\" class=\"btn btn-primary px-5\" @click=\"save\">\r\n              회원가입\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"text-center mt-4\">\r\n        <router-link\r\n          to=\"/login\"\r\n          class=\"text-decoration-none text-white-50 small\"\r\n        >\r\n          이미 계정이 있으신가요?\r\n          <span class=\"fw-semibold text-white\">로그인</span>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: white;\r\n  border-radius: 1rem;\r\n}\r\n\r\ninput::placeholder {\r\n  font-size: 0.9rem;\r\n  color: #999;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from '@/plugins/axios';\r\n\r\nexport default {\r\n  name: 'SignupView', // name은 index.js에 선언해놓은 이름과 똑같아야함\r\n  data() {\r\n    return {\r\n      result: {\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n        gender: null,\r\n        birthDate: '',\r\n        checkedEmail:false,\r\n        checkedUsername:false,\r\n      },\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {\r\n    save() {\r\n      if(!this.result.checkedEmail){\r\n        alert('이메일 중복 검사 필요')\r\n        return\r\n      }\r\n\r\n      if(!this.result.checkedUsername){\r\n        alert('닉네임 중복 검사 필요')\r\n        return\r\n      }\r\n\r\n      if (this.result.email == '') {\r\n        alert('이메일 입력필요');\r\n        return;\r\n      }\r\n\r\n      if (this.result.password == '') {\r\n        alert('비밀번호 입력필요');\r\n        return;\r\n      }\r\n\r\n      if (this.result.username == '') {\r\n        alert('닉네임 입력필요');\r\n        return;\r\n      }\r\n\r\n      if (this.result.gender == null) {\r\n        alert('성별 입력필요');\r\n        return;\r\n      }\r\n\r\n      //사용자 편의를 위해서 날짜입력을 텍스트 값으로 했기 때문에 맞는 생년월일이 들어와야하는 지 함수로 판단\r\n      if(this.isValidCompactDate(this.result.birthDate)){\r\n        var str = this.result.birthDate;\r\n        str = str.substring(0,4) + \"-\" +str.substring(4,6)+\"-\"+str.substring(6,8)\r\n        this.result.birthDate = str\r\n      }\r\n      //아무것도 입력하지 않았을 경우\r\n      else if(this.result.birthDate ==''){\r\n        alert('생년월일을 입력필요.');\r\n        return;\r\n      }\r\n      else {\r\n        console.log(this.result.birthDate)\r\n        alert('생년월일을 제대로 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      console.log(this.result);\r\n\r\n      axios\r\n        .post('/api/users', this.result)\r\n        .then((res) => {\r\n          console.log(res);\r\n          alert(\"회원가입이 완료되었습니다.\")\r\n          this.$router.push({name:'LoginView'})\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    isValidCompactDate(str) {\r\n      // 2. 연월일 추출\r\n      const year = parseInt(str.substring(0, 4), 10);\r\n      const month = parseInt(str.substring(4, 6), 10);\r\n      const day = parseInt(str.substring(6, 8), 10);\r\n\r\n      // 3. Date 객체로 변환\r\n      const date = new Date(year, month - 1, day);\r\n\r\n      // 4. 날짜 유효성 검사\r\n      return (\r\n        date.getFullYear() === year &&\r\n        date.getMonth() + 1 === month &&\r\n        date.getDate() === day\r\n      );\r\n    },\r\n    checkEmail(){\r\n      if(this.result.email == ''){\r\n        alert('이메일 입력필요')\r\n        return \r\n      }\r\n      axios\r\n        .get('/api/users/check-email',{params:{email:this.result.email}})\r\n        .then((res) => {\r\n          console.log(res);\r\n          alert(\"사용 가능한 이메일 입니다\")\r\n          this.result.checkedEmail = true;\r\n        })\r\n        .catch((err) => {\r\n          alert(\"사용 불가능한 이메일 입니다\")\r\n          console.log(err);\r\n          this.result.email='';\r\n          this.result.checkedEmail = false;\r\n        });\r\n    },\r\n    checkUsername(){\r\n      if(this.result.username == ''){\r\n        alert('닉네임 입력필요')\r\n        return \r\n      }\r\n      axios\r\n        .get('/api/users/check-username',{params:{username:this.result.username}})\r\n        .then((res) => {\r\n          console.log(res);\r\n          alert(\"사용 가능한 닉네임 입니다\")\r\n          this.result.checkedUsername = true;\r\n        })\r\n        .catch((err) => {\r\n          alert(\"사용 불가능한 닉네임 입니다\")\r\n          console.log(err);\r\n          this.result.username='';\r\n          this.result.checkedUsername = false;\r\n        });\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}