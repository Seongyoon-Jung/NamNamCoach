{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/plugins/axios';\nexport default {\n  name: 'SurveyView',\n  data() {\n    return {\n      showIntro: true,\n      showBasic: false,\n      currentStep: 0,\n      finished: false,\n      basic: {\n        height: null,\n        weight: null,\n        targetWeight: null,\n        isSurveyed: null,\n        dietType: null\n      },\n      questions: [],\n      answers: Array(10).fill(null),\n      options: ['전혀 그렇지 않다', '그렇지 않다', '보통이다', '그렇다', '매우 그렇다']\n    };\n  },\n  //설문조사 목록을 가져오기 위해서 페이지가 만들어 졌을때 질문목록 백에서 가져오기\n  created() {\n    axios.get('/api/survey/questions', {\n      params: {\n        stepLevel: 1\n      }\n    }).then(res => {\n      this.questions = res.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  computed: {\n    isFirst() {\n      return this.currentStep === 0;\n    },\n    isLast() {\n      return this.currentStep === this.questions.length - 1;\n    }\n  },\n  methods: {\n    backToIntro() {\n      this.showIntro = true;\n      this.showBasic = false;\n    },\n    startBasic() {\n      this.showIntro = false;\n      this.showBasic = true;\n    },\n    startSurvey() {\n      // 기본정보 유효성 검사\n      if (!this.basic.height || !this.basic.weight || !this.basic.targetWeight) {\n        alert('모든 기본정보를 입력해주세요.');\n        return;\n      }\n      this.showBasic = false;\n    },\n    skipSurvey() {\n      this.$router.push({\n        name: 'HomeLoginView'\n      });\n    },\n    nextStep() {\n      if (!this.validate()) return;\n      this.currentStep++;\n    },\n    prevStep() {\n      if (this.currentStep > 0) this.currentStep--;\n    },\n    validate() {\n      if (this.answers[this.currentStep] === null) {\n        alert('답변을 선택해주세요.');\n        return false;\n      }\n      return true;\n    },\n    submitSurvey() {\n      this.basic.dietType = this.result();\n      this.basic.isSurveyed = true;\n      axios.put('/api/users', this.basic).then(res => {\n        console.log(res);\n        // alert(\"회원가입이 완료되었습니다.\")\n        // this.$router.push({name:'LoginView'})\n      }).catch(err => {\n        console.log(err);\n      });\n\n      //console.log(this.basic, this.answers)\n      this.finished = true;\n\n      //키, 체중, 목표체중 user 테이블에 입력\n      //\n\n      // if (!this.validate()) return;\n      // try {\n      //   await axios.post('/api/survey', {\n      //     basic: this.basic,\n      //     answers: this.answers\n      //   });\n      //   this.finished = true;\n      // } catch (err) {\n      //   console.error(err);\n      //   alert('제출 중 오류가 발생했습니다.');\n      // }\n    },\n    //설문 결과를 바탕으로 타입을 특정하기 위한 함수\n    result() {\n      const type = [\"균형의 마에스트로\", \"심야의 스낵 헌터\", \"무계획의 방랑자\", \"단짠의 시럽 러버\", \"액티브 에이스\", \"디저트 덕후\", \"소식의 달인\", \"하이드레이션 히어로\", \"집중 먹방 챌린저\", \"헬시 뉴비\"];\n      // 가중치 2차원 배열\n      const score = [[10, 0, 2, 0, 5, 0, 8, 3, 7, 4],\n      // Q1\n      [0, 10, 1, 3, 0, 7, 0, 0, 1, 2],\n      // Q2\n      [9, 1, 2, 0, 6, 0, 5, 4, 6, 3],\n      // Q3\n      [10, 0, 2, 0, 5, 0, 4, 3, 7, 4],\n      // Q4\n      [9, 0, 1, 2, 7, 0, 3, 5, 6, 4],\n      // Q5\n      [0, 0, 0, 10, 0, 8, 0, 0, 1, 2],\n      // Q6\n      [5, 0, 0, 0, 10, 0, 1, 3, 1, 2],\n      // Q7\n      [4, 0, 1, 0, 9, 0, 2, 10, 3, 2],\n      // Q8\n      [0, 10, 3, 0, 0, 4, 0, 1, 1, 2],\n      // Q9\n      [8, 0, 2, 0, 7, 0, 4, 3, 10, 3] // Q10\n      ];\n      let modify_answer = [0, 2, 5, 8, 10]; // 5가자의 선택지를 0,1,2,3,4로 곱하는 것이아니라 0,2,5,8,10으로 최대한 같은 값이 나오는 것을 막기\n\n      let total = Array(10).fill(0);\n      let max = -1;\n      let maxInd = -1;\n      for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n          total[i] += modify_answer[this.answers[j]] * score[i][j];\n        }\n        if (max < total[i]) {\n          max = total[i];\n          maxInd = i;\n        }\n      }\n\n      // console.log(total, type[maxInd])\n      return type[maxInd];\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","showIntro","showBasic","currentStep","finished","basic","height","weight","targetWeight","isSurveyed","dietType","questions","answers","Array","fill","options","created","get","params","stepLevel","then","res","catch","err","console","log","computed","isFirst","isLast","length","methods","backToIntro","startBasic","startSurvey","alert","skipSurvey","$router","push","nextStep","validate","prevStep","submitSurvey","result","put","type","score","modify_answer","total","max","maxInd","i","j"],"sources":["C:\\Users\\taewo\\Desktop\\NamNamCoach\\frontend\\src\\views\\SurveyView.vue"],"sourcesContent":["<template>\r\n    <main class=\"survey-page\">\r\n      <div class=\"container mt-5\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n  \r\n            <!-- 1) 인트로 화면 -->\r\n            <div v-if=\"showIntro\" class=\"card p-4 shadow-sm text-center\">\r\n              <h3 class=\"text-primary mb-3\">🍽️ 냠냠코치 식습관 설문조사 🍽️</h3>\r\n              <p>\r\n                당신의 식습관을 흥미진진하게 파헤쳐 줄<br/>\r\n                <strong>‘냠냠코치 식습관 분석’</strong>에 초대합니다!<br/>\r\n                질문에 솔직하게 답하면 나만의 맞춤 리포트를 드려요.<br/><br>\r\n                ※주의 ) <u>건너뛰기</u> 시엔 나이·성별 평균값 기반 분석이 제공되어<br/>\r\n                정확도가 떨어질 수 있으니 주의하세요!<br/><br/>\r\n                🎉 특별 이벤트: 참여만 해도 <strong>냠냠코인 10,000개</strong>를 드립니다!\r\n              </p>\r\n              <div class=\"mt-4\">\r\n                <button class=\"btn btn-success me-2\" @click=\"startBasic\">\r\n                  설문 시작하기\r\n                </button>\r\n                <router-link to=\"/\" class=\"btn btn-outline-secondary\">\r\n                  건너뛰기\r\n                </router-link>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- 2) 기본정보 입력 화면 -->\r\n            <div v-else-if=\"showBasic\" class=\"card p-4 shadow-sm\">\r\n              <h4 class=\"text-center text-primary mb-4\">기본 정보 입력</h4>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">키 (cm)</label>\r\n                <input type=\"number\" class=\"form-control\" v-model.number=\"basic.height\" />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">체중 (kg)</label>\r\n                <input type=\"number\" class=\"form-control\" v-model.number=\"basic.weight\" />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">목표 체중 (kg)</label>\r\n                <input type=\"number\" class=\"form-control\" v-model.number=\"basic.targetWeight\" />\r\n              </div>\r\n              <div class=\"d-flex justify-content-between\">\r\n                <button class=\"btn btn-secondary\" @click=\"backToIntro\">\r\n                  이전\r\n                </button>\r\n                <button class=\"btn btn-primary\" @click=\"startSurvey\">\r\n                  다음\r\n                </button>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- 3) 실제 설문 화면 -->\r\n            <div v-else class=\"card p-4 shadow-sm\">\r\n              <h3 class=\"text-center text-primary mb-4\">식습관 분석</h3>\r\n  \r\n              <!-- 스텝 인디케이터 -->\r\n              <div class=\"d-flex justify-content-center mb-4\">\r\n                <span\r\n                  v-for=\"(q,i) in questions\"\r\n                  :key=\"i\"\r\n                  class=\"step mx-1\"\r\n                  :class=\"{ active: currentStep===i, finish: i<currentStep }\"\r\n                >{{ i+1 }}</span>\r\n              </div>\r\n  \r\n              <!-- 질문 탭 -->\r\n              <div v-for=\"(q,i) in questions\" :key=\"i\" v-show=\"currentStep===i\" class=\"tab\">\r\n                <h5>{{ q.questionText }}</h5>\r\n                <div class=\"mt-3 d-flex justify-content-between\">\r\n                    <div class=\"form-check form-check-inline\" v-for=\"(opt,idx) in options\" :key=\"idx\">\r\n                    <input\r\n                        class=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        :name=\"'q'+i\"\r\n                        :id=\"'q'+i+'-opt'+idx\"\r\n                        :value=\"idx\"\r\n                        v-model=\"answers[i]\"\r\n                    />\r\n                    <label\r\n                        class=\"form-check-label\"\r\n                        :for=\"'q'+i+'-opt'+idx\"\r\n                    >{{ opt }}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n              <!-- 네비게이션 버튼 -->\r\n              <div class=\"d-flex justify-content-between mt-4\">\r\n                <button class=\"btn btn-secondary\" @click=\"prevStep\" :disabled=\"isFirst\">\r\n                  이전\r\n                </button>\r\n                <button class=\"btn btn-primary\" @click=\"isLast ? submitSurvey() : nextStep()\">\r\n                  {{ isLast ? '제출' : '다음' }}\r\n                </button>\r\n              </div>\r\n  \r\n              <!-- 완료 메시지 -->\r\n              <div v-if=\"finished\" class=\"text-center mt-4\">\r\n                <h4 class=\"text-success\">설문이 완료되었습니다!</h4>\r\n                <p>소중한 응답 감사합니다.</p>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from '@/plugins/axios';\r\n  \r\n  export default {\r\n    name: 'SurveyView',\r\n    data() {\r\n      return {\r\n        showIntro: true,\r\n        showBasic: false,\r\n        currentStep: 0,\r\n        finished: false,\r\n        basic: {\r\n          height: null,\r\n          weight: null,\r\n          targetWeight: null,\r\n          isSurveyed : null,\r\n          dietType : null,\r\n        },\r\n        questions: [\r\n        ],\r\n        answers: Array(10).fill(null),\r\n        options: [\r\n          '전혀 그렇지 않다',\r\n          '그렇지 않다',\r\n          '보통이다',\r\n          '그렇다',\r\n          '매우 그렇다'\r\n        ],\r\n      };\r\n    },\r\n    //설문조사 목록을 가져오기 위해서 페이지가 만들어 졌을때 질문목록 백에서 가져오기\r\n    created(){\r\n        axios\r\n        .get('/api/survey/questions',{params:{stepLevel:1}})\r\n        .then((res) => {\r\n          this.questions = res.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        });\r\n    },\r\n    computed: {\r\n      isFirst() {\r\n        return this.currentStep === 0;\r\n      },\r\n      isLast() {\r\n        return this.currentStep === this.questions.length - 1;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      backToIntro() {\r\n        this.showIntro = true;\r\n        this.showBasic = false;\r\n      },\r\n      startBasic() {\r\n        this.showIntro = false;\r\n        this.showBasic = true;\r\n      },\r\n      startSurvey() {\r\n        // 기본정보 유효성 검사\r\n        if (!this.basic.height || !this.basic.weight || !this.basic.targetWeight) {\r\n          alert('모든 기본정보를 입력해주세요.');\r\n          return;\r\n        }\r\n        this.showBasic = false;\r\n      },\r\n      skipSurvey() {\r\n        this.$router.push({ name: 'HomeLoginView' });\r\n      },\r\n      nextStep() {\r\n        if (!this.validate()) return;\r\n        this.currentStep++;\r\n      },\r\n      prevStep() {\r\n        if (this.currentStep > 0) this.currentStep--;\r\n      },\r\n      validate() {\r\n        if (this.answers[this.currentStep] === null) {\r\n          alert('답변을 선택해주세요.');\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n      submitSurvey() {\r\n        this.basic.dietType = this.result();\r\n        this.basic.isSurveyed = true;\r\n\r\n        axios\r\n        .put('/api/users', this.basic)\r\n        .then((res) => {\r\n          console.log(res);\r\n          // alert(\"회원가입이 완료되었습니다.\")\r\n          // this.$router.push({name:'LoginView'})\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n        //console.log(this.basic, this.answers)\r\n        this.finished = true;\r\n        \r\n\r\n\r\n\r\n        //키, 체중, 목표체중 user 테이블에 입력\r\n        //\r\n\r\n\r\n        // if (!this.validate()) return;\r\n        // try {\r\n        //   await axios.post('/api/survey', {\r\n        //     basic: this.basic,\r\n        //     answers: this.answers\r\n        //   });\r\n        //   this.finished = true;\r\n        // } catch (err) {\r\n        //   console.error(err);\r\n        //   alert('제출 중 오류가 발생했습니다.');\r\n        // }\r\n      },\r\n\r\n\r\n      //설문 결과를 바탕으로 타입을 특정하기 위한 함수\r\n      result(){\r\n        const type = [\r\n                      \"균형의 마에스트로\",\r\n                      \"심야의 스낵 헌터\",\r\n                      \"무계획의 방랑자\",\r\n                      \"단짠의 시럽 러버\",\r\n                      \"액티브 에이스\",\r\n                      \"디저트 덕후\",\r\n                      \"소식의 달인\",\r\n                      \"하이드레이션 히어로\",\r\n                      \"집중 먹방 챌린저\",\r\n                      \"헬시 뉴비\"\r\n                    ];\r\n        // 가중치 2차원 배열\r\n        const score = [\r\n                      [10,  0,  2,  0,  5,  0,  8,  3,  7,  4],  // Q1\r\n                      [ 0, 10,  1,  3,  0,  7,  0,  0,  1,  2],  // Q2\r\n                      [ 9,  1,  2,  0,  6,  0,  5,  4,  6,  3],  // Q3\r\n                      [10,  0,  2,  0,  5,  0,  4,  3,  7,  4],  // Q4\r\n                      [ 9,  0,  1,  2,  7,  0,  3,  5,  6,  4],  // Q5\r\n                      [ 0,  0,  0, 10,  0,  8,  0,  0,  1,  2],  // Q6\r\n                      [ 5,  0,  0,  0, 10,  0,  1,  3,  1,  2],  // Q7\r\n                      [ 4,  0,  1,  0,  9,  0,  2, 10,  3,  2],  // Q8\r\n                      [ 0, 10,  3,  0,  0,  4,  0,  1,  1,  2],  // Q9\r\n                      [ 8,  0,  2,  0,  7,  0,  4,  3, 10,  3],  // Q10\r\n                    ];\r\n        \r\n        let modify_answer = [0,2,5,8,10] // 5가자의 선택지를 0,1,2,3,4로 곱하는 것이아니라 0,2,5,8,10으로 최대한 같은 값이 나오는 것을 막기\r\n\r\n        let total = Array(10).fill(0);\r\n        let max = -1;\r\n        let maxInd = -1;\r\n\r\n        for(let i = 0; i < 10 ; i++){\r\n          for(let j = 0; j < 10 ; j++){\r\n            total[i] +=  modify_answer[this.answers[j]] * score[i][j];\r\n          } \r\n          if(max < total[i]){\r\n            max = total[i];\r\n            maxInd = i;\r\n          }\r\n        }\r\n\r\n        // console.log(total, type[maxInd])\r\n        return type[maxInd];\r\n      }\r\n   }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .survey-page {\r\n    background: #f8f9fa;\r\n    min-height: 100vh;\r\n    padding-bottom: 2rem;\r\n  }\r\n  .step {\r\n    display: inline-block;\r\n    width: 2rem; height: 2rem;\r\n    background: #ddd; border-radius: 50%;\r\n    line-height: 2rem; text-align: center;\r\n    color: #6c757d; opacity: 0.5;\r\n    transition: all 0.3s;\r\n  }\r\n  .step.active { opacity:1; background:#6f42c1; color:#fff }\r\n  .step.finish { background:#6f42c1; color:#fff; opacity:1 }\r\n  /* 인트로/기본정보 카드 */\r\n  .card.text-center p, .card h4 { line-height:1.6; }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}