{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelRadio as _vModelRadio, withDirectives as _withDirectives, vShow as _vShow } from \"vue\";\nconst _hoisted_1 = {\n  class: \"survey-page\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-8\"\n};\nconst _hoisted_5 = {\n  class: \"card p-4 shadow-sm\"\n};\nconst _hoisted_6 = {\n  class: \"d-flex justify-content-center mb-4\"\n};\nconst _hoisted_7 = {\n  class: \"mt-3\"\n};\nconst _hoisted_8 = [\"name\", \"id\", \"value\", \"onUpdate:modelValue\"];\nconst _hoisted_9 = [\"for\"];\nconst _hoisted_10 = {\n  class: \"d-flex justify-content-between mt-4\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  key: 0,\n  class: \"text-center mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", {\n    class: \"text-center text-primary mb-4\"\n  }, \"설문조사\", -1 /* HOISTED */)), _createCommentVNode(\" Steps indicator \"), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (q, i) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: i,\n      class: _normalizeClass([\"step mx-1\", {\n        active: $data.currentStep === i,\n        finish: i < $data.currentStep\n      }])\n    }, _toDisplayString(i + 1), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Question tabs \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (q, i) => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      key: 'tab-' + i,\n      class: \"tab\"\n    }, [_createElementVNode(\"h5\", null, _toDisplayString(q.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, (opt, idx) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"form-check\",\n        key: idx\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        class: \"form-check-input\",\n        type: \"radio\",\n        name: 'q' + i,\n        id: 'q' + i + '-opt' + idx,\n        value: idx,\n        \"onUpdate:modelValue\": $event => $data.answers[i] = $event\n      }, null, 8 /* PROPS */, _hoisted_8), [[_vModelRadio, $data.answers[i]]]), _createElementVNode(\"label\", {\n        class: \"form-check-label\",\n        for: 'q' + i + '-opt' + idx\n      }, _toDisplayString(opt), 9 /* TEXT, PROPS */, _hoisted_9)]);\n    }), 128 /* KEYED_FRAGMENT */))])])), [[_vShow, $data.currentStep === i]]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Navigation buttons \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"btn btn-secondary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevStep && $options.prevStep(...args)),\n    disabled: $options.isFirst\n  }, \" 이전 \", 8 /* PROPS */, _hoisted_11), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.isLast ? $options.submitSurvey() : $options.nextStep())\n  }, _toDisplayString($options.isLast ? '제출' : '다음'), 1 /* TEXT */)]), _createCommentVNode(\" Thank you message \"), $data.finished ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _cache[2] || (_cache[2] = [_createElementVNode(\"h4\", {\n    class: \"text-success\"\n  }, \"설문이 완료되었습니다!\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"소중한 응답 감사합니다.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","_Fragment","_renderList","$data","questions","q","i","_normalizeClass","active","currentStep","finish","_toDisplayString","text","_hoisted_7","options","opt","idx","type","name","id","value","$event","answers","_hoisted_8","for","_hoisted_9","_hoisted_10","onClick","_cache","args","$options","prevStep","disabled","isFirst","_hoisted_11","isLast","submitSurvey","nextStep","finished","_hoisted_12"],"sources":["C:\\Users\\taewo\\Desktop\\yamyam\\vue-app\\src\\views\\SurveyView.vue"],"sourcesContent":["<template>\r\n    <main class=\"survey-page\">\r\n      <div class=\"container mt-5\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card p-4 shadow-sm\">\r\n              <h3 class=\"text-center text-primary mb-4\">설문조사</h3>\r\n  \r\n              <!-- Steps indicator -->\r\n              <div class=\"d-flex justify-content-center mb-4\">\r\n                <span\r\n                  v-for=\"(q, i) in questions\"\r\n                  :key=\"i\"\r\n                  class=\"step mx-1\"\r\n                  :class=\"{ active: currentStep === i, finish: i < currentStep }\"\r\n                >\r\n                  {{ i + 1 }}\r\n                </span>\r\n              </div>\r\n  \r\n              <!-- Question tabs -->\r\n              <div\r\n                v-for=\"(q, i) in questions\"\r\n                :key=\"'tab-' + i\"\r\n                v-show=\"currentStep === i\"\r\n                class=\"tab\"\r\n              >\r\n                <h5>{{ q.text }}</h5>\r\n                <div class=\"mt-3\">\r\n                  <div\r\n                    class=\"form-check\"\r\n                    v-for=\"(opt, idx) in options\"\r\n                    :key=\"idx\"\r\n                  >\r\n                    <input\r\n                      class=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      :name=\"'q' + i\"\r\n                      :id=\"'q' + i + '-opt' + idx\"\r\n                      :value=\"idx\"\r\n                      v-model=\"answers[i]\"\r\n                    />\r\n                    <label\r\n                      class=\"form-check-label\"\r\n                      :for=\"'q' + i + '-opt' + idx\"\r\n                    >\r\n                      {{ opt }}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              <!-- Navigation buttons -->\r\n              <div class=\"d-flex justify-content-between mt-4\">\r\n                <button\r\n                  class=\"btn btn-secondary\"\r\n                  @click=\"prevStep\"\r\n                  :disabled=\"isFirst\"\r\n                >\r\n                  이전\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-primary\"\r\n                  @click=\"isLast ? submitSurvey() : nextStep()\"\r\n                >\r\n                  {{ isLast ? '제출' : '다음' }}\r\n                </button>\r\n              </div>\r\n  \r\n              <!-- Thank you message -->\r\n              <div\r\n                v-if=\"finished\"\r\n                class=\"text-center mt-4\"\r\n              >\r\n                <h4 class=\"text-success\">설문이 완료되었습니다!</h4>\r\n                <p>소중한 응답 감사합니다.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from '@/plugins/axios';\r\n  \r\n  export default {\r\n    name: 'SurveyView',\r\n    data() {\r\n      return {\r\n        currentStep: 0,\r\n        finished: false,\r\n        questions: [\r\n          { text: '나는 하루 세 끼를 규칙적으로 먹는다.' },\r\n          { text: '나는 자주 야식을 먹는 편이다.' },\r\n          { text: '나의 식사 시간은 거의 매일 비슷한 편이다.' },\r\n          { text: '한 끼에 내가 먹는 양이 적절하다고 느낀다.' },\r\n          { text: '나는 주로 채소와 단백질을 골고루 섭취하려고 노력한다.' },\r\n          { text: '나는 단 음식을 자주 즐겨 먹는다.' },\r\n          { text: '나는 일주일에 최소 3회 이상 규칙적으로 운동을 한다.' },\r\n          { text: '나는 하루에 2L 이상의 물을 충분히 마신다.' },\r\n          { text: '나는 스트레스를 받을 때 평소보다 더 많이 먹는 편이다.' },\r\n          { text: '나는 식사할 때 TV·휴대폰·일 등 딴짓 없이 음식에만 집중해서 먹는다.' }\r\n        ],\r\n        answers: Array(10).fill(null),\r\n        options: [\r\n          '전혀 그렇지 않다',\r\n          '그렇지 않다',\r\n          '보통이다',\r\n          '그렇다',\r\n          '매우 그렇다'\r\n        ]\r\n      };\r\n    },\r\n    computed: {\r\n      isFirst() {\r\n        return this.currentStep === 0;\r\n      },\r\n      isLast() {\r\n        return this.currentStep === this.questions.length - 1;\r\n      }\r\n    },\r\n    methods: {\r\n      nextStep() {\r\n        if (!this.validate()) return;\r\n        this.currentStep++;\r\n      },\r\n      prevStep() {\r\n        if (this.currentStep > 0) {\r\n          this.currentStep--;\r\n        }\r\n      },\r\n      validate() {\r\n        if (this.answers[this.currentStep] === null) {\r\n          alert('답변을 선택해주세요.');\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n      async submitSurvey() {\r\n        if (!this.validate()) return;\r\n        try {\r\n          // 예: 백엔드에 POST\r\n          await axios.post('/api/survey', { answers: this.answers });\r\n          this.finished = true;\r\n        } catch (err) {\r\n          console.error(err);\r\n          alert('제출 중 오류가 발생했습니다.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .survey-page {\r\n    background: #f8f9fa;\r\n    min-height: 100vh;\r\n    padding-bottom: 2rem;\r\n  }\r\n  \r\n  .step {\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    background: #ddd;\r\n    border-radius: 50%;\r\n    line-height: 2rem;\r\n    text-align: center;\r\n    color: #6c757d;\r\n    opacity: 0.5;\r\n    transition: all 0.3s;\r\n  }\r\n  .step.active {\r\n    opacity: 1;\r\n    background: #6f42c1;\r\n    color: #fff;\r\n  }\r\n  .step.finish {\r\n    background: #6f42c1;\r\n    color: #fff;\r\n    opacity: 1;\r\n  }\r\n  \r\n  .tab {\r\n    /* 각 질문 영역 */\r\n  }\r\n  \r\n  .card h5 {\r\n    font-weight: 500;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}